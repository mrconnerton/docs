FORMAT: 1A
HOST: https://api.signifyd.com/v2

# Signifyd API

This doc will show you how to use our REST API to authenticate, make requests, and retrieve data. All responses to and from the API will be in [JSON](http://www.tutorialspoint.com/json/json_data_types.htm).

You can view a [step-by-step tutorial](https://www.youtube.com/watch?v=aUE-Othaf2c&feature=youtu.be) on how to send and fetch data using the Signifyd API. 

## Authentication
All API requests must be made over HTTPS using a [base64 encoded](https://en.wikipedia.org/wiki/Base64) API key. You can generate an API key by creating a team in [settings](https://app.signifyd.com/settings) page.

- Authentication: [HTTP Basic Auth](http://en.wikipedia.org/wiki/Basic_access_authentication#Client_side).
- Username: Your API key as the basic auth username. 
- Password: You do not need to provide a password. However, some REST clients expect a username:password pair separated by a colon. If so, you can use a colon as the password.

## REST Client
Our API docs include a built-in REST console you can use to interactively test the API. Each endpoint is configured with example request data that will produce a successful result from our API if you provide valid credentials. By default, the API key in the REST console is `abcdefghijklmnopqrstuvwxyz` which appears in it's base64 encoded form, `YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6`. You must replace this with you own base64 encoded API key in the headers section of the console to successfully submit requests.

## Response Codes
We use conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing, invalid syntax, etc.), and codes in the 5xx range indicate an error with Signifyd's servers.

| Code| Description |
| --- | --- |
|`200`| Success. Request completed. |
|`201`| Success. New resource created. |
|`204`| Success. No content to return. Only the status code returns. |
|`400`| Bad Request - The request could not be parsed. |
|`401`| Unauthorized - user is not logged in, could not be authenticated. |
|`403`| Forbidden - Cannot access resource. |
|`404`| Not Found - resource doesn't exist. |
|`409`| Conflict - with state of the resource on server. Can occur with (too rapid) PUT requests. |
|`5xx`| Server error. |

## Error Messages
There are two types of errors returned by the API server in the bodies of 4xx and 5xx responses:
- Field-specific errors
- General error messages

```
{
  "errors": {
    "fieldName":[
      "Field-specific error message, e.g., fieldName is not a valid email address."
    ]
  },
  "messages": [
    "General error message."
  ]
}
```

## Dates
Our API uses the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) date format for
complete date plus hours, minutes, seconds and timezone offset.

```
         yyyy-MM-dd'T'HH:mm:ssZ
For UTC: 2015-11-03T13:21:58+00:00
For PST: 2015-11-03T13:21:58-08:00
```
For more information about your specific programming language, please view [this document](https://developers.google.com/gmail/markup/reference/datetime-formatting).

## Feedback 
Was this document helpful?
[Yes](https://docs.google.com/forms/d/e/1FAIpQLSdBB8IWudRFdAob3uxwcEJTl9ryPJjyyJKsv5DbahYYG2Ickg/viewform?usp=pp_url&entry.323773105=5)
or [No](https://docs.google.com/forms/d/e/1FAIpQLSdBB8IWudRFdAob3uxwcEJTl9ryPJjyyJKsv5DbahYYG2Ickg/viewform?usp=pp_url&entry.323773105=1)


## Group Cases

Cases are orders submitted to Signifyd for review. A case contains payment, recipient, product, shipping, and account information.

## Create a Case [/cases]
Submit an order for fraud review. 

We recommend sending as many data points as available for the best decision.

If you are on a complete plan this will also automatically submit the order for guarantee.

### Create Case [POST]

+ Request (application/json)

    + Headers

            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6

    + Attributes (CaseCreation)

    + Body

            {
                "purchase": {
                    "orderSessionId": "uha3d98weicm20eufhlqe",
                    "browserIpAddress": "192.168.1.1",
                    "orderId": "19418",
                    "createdAt": "2016-07-11T17:54:31-05:00",
                    "paymentGateway": "stripe",
                    "paymentMethod": "credit_card",
                    "transactionId": "1a2sf3f44f21s1",
                    "currency": "USD",
                    "avsResponseCode": "Y",
                    "cvvResponseCode": "M",
                    "orderChannel": "PHONE",
                    "receivedBy": "John Doe",
                    "totalPrice": 74.99,
                    "customerOrderRecommendation": "REJECT",
                    "products": [
                        {
                            "itemId": "1",
                            "itemName": "Sparkly sandals",
                            "itemIsDigital": false,
                            "itemCategory": "apparel",
                            "itemSubCategory": "footwear",
                            "itemUrl": "http://mydomain.com/sparkly-sandals",
                            "itemImage": "http://mydomain.com/images/sparkly-sandals.jpeg",
                            "itemQuantity": 1,
                            "itemPrice": 49.99,
                            "itemWeight": 5
                        },
                        {
                            "itemId": "2",
                            "itemName": "Summer tank top",
                            "itemIsDigital": false,
                            "itemCategory": "apparel",
                            "itemSubCategory": "shirts",
                            "itemUrl": "http://mydomain.com/summer-tank",
                            "itemImage": "http://mydomain.com/images/summer-tank.jpeg",
                            "itemQuantity": 1,
                            "itemPrice": 19.99,
                            "itemWeight": 2
                        }
                    ],
                   "discountCodes": [ 
                        {
                           "amount": 10.00,
                           "code": "TENDOLLARSOFF"
                        },
                        {
                            "percentage": 20,
                            "code": "20PERCENTOFF"
                        }
                    ],   
                    "shipments": [
                        {
                            "shipper": "UPS",
                            "shippingMethod": "ground",
                            "shippingPrice": 10
                        },
                        {
                            "shipper": "USPS",
                            "shippingMethod": "international",
                            "shippingPrice": 20
                        }
                    ]
                },
                "recipient": {
                    "fullName": "Bob Smith",
                    "confirmationEmail": "bob@gmail.com",
                    "confirmationPhone": "5047130000",
                    "organization": "SIGNIFYD",
                    "deliveryAddress": {
                        "streetAddress": "123 State Street",
                        "unit": "2A",
                        "city": "Chicago",
                        "provinceCode": "IL",
                        "postalCode": "60622",
                        "countryCode": "US"
                    }
                },
                "card": {
                    "cardHolderName": "Robert Smith",
                    "bin": 407441,
                    "last4": "1234",
                    "expiryMonth": 12,
                    "expiryYear": 2015,
                    "billingAddress": {
                        "streetAddress": null,
                        "unit": "2A",
                        "city": "Chicago",
                        "provinceCode": "IL",
                        "postalCode": "60622",
                        "countryCode": "US"
                    }
                },
                "userAccount": {
                    "email": "bob@gmail.com",
                    "username": "bobbo",
                    "phone": "5555551212",
                    "createdDate": "2013-01-18T17:54:31-05:00",
                    "accountNumber": "54321",
                    "lastOrderId": "4321",
                    "aggregateOrderCount": 40,
                    "aggregateOrderDollars": 5000,
                    "lastUpdateDate": "2013-01-18T17:54:31-05:00"
                },
                "seller": {
                    "name": "We sell awesome stuff, Inc.",
                    "email": "wesellawesomestuff@gmail.com",
                    "username": "awesomestuff1234",
                    "phone": "8883334545",
                    "domain": "wesellawesomestuff.com",
                    "createdDate": "2012-01-09T12:33:34-04:00",
                    "accountNumber": "54321",
                    "aggregateOrderCount": 4000,
                    "aggregateOrderDollars": 3000000.00,
                    "lastUpdateDate": "2016-07-22T07:22:33-04:00",
                    "onboardingIpAddress": "192.122.1.1",
                    "onboardingEmail": "wesellawesomestuff@gmail.com",
                    "tags": ["Enterprise Account", "Gold Plan"],
                    "shipFromAddress": {
                        "streetAddress": "1850 Mercer Rd",
                        "unit": null,
                        "city": "Lexington",
                        "provinceCode": "KY",
                        "postalCode": "40511",
                        "countryCode": "US"
                    },
                    "corporateAddress": {
                        "streetAddress": "410 Terry Ave",
                        "unit": "3L",
                        "city": "Seattle",
                        "provinceCode": "WA",
                        "postalCode": "98109",
                        "countryCode": "US"
                    }
                }
            }

+ Response 201 (application/json)

    + Body

            {
                "investigationId": 1
            }

+ Response 400 (application/json)

    + Body

            {
                  "errors": {
                     "purchase.browserIpAddress": [
                          "error.ip"
                    ]
                }
            }

## Get a Case [/cases/{caseId}]
Retrieve details about an individual case by investigation id or case id.

### Get Case [GET]

+ Parameters
    + caseId: 44 (integer) - The unique identifier for the case that you want to retrieve.  This identifier is issued upon case creation.

+ Request

    + Headers

            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6

+ Response 200 (application/json)

    + Attributes (Case)


    + Body

            {
                "associatedTeam": {
                "teamId": 24,
                "teamName": "My ecommerce store"
            },
            {
                "guaranteeDisposition": "APPROVED",
                "investigationId": 44,
                "caseId": 44,
                "headline": "Maxine Trycia",
                "uuid": "97c56c86-7984-44fa-9a3e-7d5f34d1bead",
                "updatedAt": "2017-06-09T21:03:26+0000",
                "status": "DISMISSED",
                "reviewDisposition": "UNSET",
                "orderId": "19418",
                "orderAmount": 74.99,
                "orderOutcome": "SUCCESSFUL,
                "currency": "USD",
                "score": 776,
                "orderDate": "2016-10-28T22:54:31+0000",
                "createdAt": "2016-10-31T23:46:37+0000",
                "testInvestigation": false,
                "guaranteeEligible": false
            }

+ Response 404 (application/json)

    + Body

            {
              messages: [
                  "There is no case with that id, or you do not have permission to access it."
              ]
            }


## Add a Fulfillment [/fulfillments/{orderId}]
A fulfillment represents a shipment of one or more items in an order. Submit fulfillments details for orders that you have shipped, even if the order is partially shipped. Fulfillments are used to improve decision performance and as proof of delivery for submitted chargebacks. 


### Add Fulfillment [POST]

+ Parameters
    + orderId: "19418" (string) - the order id associated to a case that was previously created.

+ Request (application/json)

    + Attribute (Fulfillments)

    + Body
    
            {  
               "fulfillments":[  
                  {  
                     "id":"1002",
                     "orderId":"19418",
                     "createdAt":"2018-09-01T13:00:00Z",
                     "recipientName":"Bob Smith",
                     "deliveryEmail":"bob@gmail.com",
                     "fulfillmentStatus":"partial",
                     "shipmentStatus":"delivered",
                     "shippingCarrier":"UPS",
                     "trackingNumbers":[  
                        "1Z827wk74630"
                     ],
                     "trackingUrls":[  
                        "http:\/\/wwwapps.ups.com\/etracking\/tracking.cgi?1Z827wk74630"
                     ],
                     "products":[  
                        {  
                           "itemId":"1",
                           "itemName":"Sparkly sandals",
                           "itemIsDigital":false,
                           "itemCategory":"apparel",
                           "itemSubCategory":"footwear",
                           "itemUrl":"http://mydomain.com/sparkly-sandals",
                           "itemImage":"http://mydomain.com/images/sparkly-sandals.jpeg",
                           "itemQuantity":1,
                           "itemPrice":49.99,
                           "itemWeight":5
                        }
                      ],
                        "deliveryAddress": {
                        "streetAddress": "123 State Street",
                        "unit": "2A",
                        "city": "Chicago",
                        "provinceCode": "IL",
                        "postalCode": "60622",
                        "countryCode": "US"
                    },
                    "confirmationName": "ACME Ware House",
                    "confirmationPhone": 1231232
                    }
                ]
            }

+ Response 200 (application/json)

    + Body

            {  
               "fulfillments":[  
                  {  
                     "id":"1002",
                     "orderId":"19418",
                     "createdAt":"2018-09-01T13:00:00Z",
                     "recipientName":"Bob Smith",
                     "deliveryEmail":"bob@gmail.com",
                     "fulfillmentStatus":"partial",
                     "shipmentStatus":"delivered",
                     "shippingCarrier":"UPS",
                     "trackingNumbers":[  
                        "1Z827wk74630"
                     ],
                     "trackingUrls":[  
                        "http:\/\/wwwapps.ups.com\/etracking\/tracking.cgi?1Z827wk74630"
                     ],
                     "products":[  
                        {  
                           "itemId":"1",
                           "itemName":"Sparkly sandals",
                           "itemIsDigital":false,
                           "itemCategory":"apparel",
                           "itemSubCategory":"footwear",
                           "itemUrl":"http://mydomain.com/sparkly-sandals",
                           "itemImage":"http://mydomain.com/images/sparkly-sandals.jpeg",
                           "itemQuantity":1,
                           "itemPrice":49.99,
                           "itemWeight":5
                        }
                     ]
                  }
               ]
            }

## Group Guarantees
A guarantee is a financial liability shift that protects online retailers in case of chargebacks. View our product manual to [learn more](https://www.signifyd.com/resources/manual/signifyd-guarantee/signifyd-guarantee/). 

*Guarantee APIs require a case or investigation id which is only provided when [creating a case](https://jsapi.apiary.io/apis/signifydapi/reference/cases/create-a-case/create-case.html).*

## Submit a Guarantee [/async/guarantees]
Submit a request to guarantee an existing case.

### Submit Guarantee [POST]

+ Request (application/json)
    + Headers

            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6
    + Body

            {
                "caseId": 44
            }


+ Response 202 (application/json)

    + Body

            {
                "caseId": 44            
            }
            
            
## Cancel a Guarantee [/cases/{caseId}/guarantee]
A Guarantee can be canceled for orders that no longer require a guarantee. Example: Your customer cancels the order and you issue a refund, you run out of stock for the ordered item, or you cancel the order. 

*Your account will be credited for any canceled guarantees. You cannot cancel a guarantee that has been declined or after 30 days of submission.*

### Cancel Guarantee [PUT]

+ Parameters
    + caseId: 44 (integer) - The id for the case whose guarantee is being cancelled.

+ Request (application/json)

    + Headers

            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6

    + Body

            {
               "guaranteeDisposition" : "CANCELED"
            }

+ Response 200 (application/json)

    + Attributes (GuaranteeRequest)

    + Body

            {
                "disposition": "CANCELED",
                "reviewedBy": "support@signifyd.com",
                "reviewedAt": "2016-02-23T22:28:43+0000",
                "submittedBy": "support@signifyd.com",
                "submittedAt": "2016-02-02T18:09:57+0000",
                "rereviewCount": 0,
                "caseId": 8260439,
                "guaranteeId": 53
            }
            
+ Response 404 (application/json)

    + Body

            {
              messages: [
                  "You are not authorized to set this Guarantee Disposition."
              ]
            }

## Group Webhooks

Webhooks are messages sent by SIGNIFYD via HTTP POST to a url you configure on your [Notifications](https://app.signifyd.com/settings/notifications) page in the SIGNIFYD settings.
Webhook messages are sent when certain events occur in the life of an investigation. They allow your application to
receive pushed updates about a case, rather than poll SIGNIFYD for status changes. 


### Webhook Events
You can create webhooks in Signifyd for the following events. Each event has a corresponding topic identifier
which will be sent in the `X-SIGNIFYD-TOPIC` header of the webhook.

Currently, the following events can trigger a webhook. Only one URL may be specified per event.

| Event| `X-SIGNIFYD-TOPIC` | Description | Response |
| --- | --- | --- | --- |
| Case Creation | `cases/creation` | Sent immediately after a case is created | <a href="#case-webhook">View</a> |
| Case Rescore | `cases/rescore` | Sent anytime a case is scored following case creation |  <a href="#case-webhook">View</a> |
| Case Review | `cases/review` | Sent anytime a user assigns a case a Review Disposition (thumbs up/down on console) |  <a href="#case-webhook">View</a> |
| Guarantee Completion | `guarantees/completion` | Sent anytime a guarantees decision is made on a case |  <a href="#case-webhook">View</a> |
| Claim Review | `claims/reviewe` | Sent anytime a request for chargeback reimbursement has been completed |  <a href="#claim">View</a> |
| Claim Paid | `claims/paid` | Sent anytime a claim has been paid | <a href="#claim">View</a> |

### Responding to a Webhook
To acknowledge receipt of a webhook, your endpoint should be publicly accessible and return a 2xx HTTP status code. All response codes outside this range, including 3xx codes, will indicate to Signifyd that you did not receive the webhook. This mean that a URL redirection or a "Not Modified" response will be treated as a failure. 

If your endpoint does not successfully receive a webhook we will resend the webhook up to 15 times over four days. The first webhook will be retried after 20s with expotential delays for each subsequent retry. Webhooks cannot be manually retriggered, however you can retrieve the status of a guarantee or case by making a GET request on the applicable resource.

### Verifying a Webhook

To allow a client to verify a webhook message has in fact come from SIGNIFYD, an `X-SIGNIFYD-SEC-HMAC-SHA256` header is included in each webhook POST message. The contents of this header is the Base64 encoded output of the HMAC SHA256 encoding of the JSON body of the message, using the team's API key as the encryption key. To verify the authenticity of the webhook message, you should calculate this value yourself and verify it equals the value contained in the header.

Here's an example of how to compute the value in Java.

`Mac sha256HMAC = javax.crypto.Mac.getInstance("HmacSHA256");
SecretKeySpec secretKey = new SecretKeySpec(teamAPIKEY.getBytes(), "HmacSHA256");
sha256HMAC.init(secretKey);
String encodedHMAC256 = Base64.encodeBase64String(sha256HMAC.doFinal(jsonBody.getBytes("UTF-8")));`

### Testing a Webhook
Once a webhook is configured, a test POST can be sent by selecting the Test button next to the desired webhook in the Signifyd console settings.
The test webhook message is sent with an HMAC SHA256 verification header (see Webhook Verification below).
The header value is the Base64 encoded output of the HMAC SHA256 encoding of the test webhook JSON body,
using the team API key when available. The test webhook message uses the secret key `ABCDE`. A 'cases/test' topic header is also sent with the test POST.

### Webhook Response

#### <a name="case-webhook"/>Cases and Guarantees</a>

```
{
   "analysisUrl":"https://signifyd.com/v2/cases/1/analysis",
   "notesUrl":"https://signifyd.com/v2/cases/1/notes",
   "guaranteeEligible":false,
   "status":"DISMISSED",
   "uuid":"709b9107-eda0-4cdd-bdac-a82f51a8a3f3",
   "headline":"John Smith",
   "reviewDisposition":null,
   "associatedTeam":{
      "teamName":"anyTeam",
      "teamId":26,
      "getAutoDismiss":true,
      "getTeamDismissalDays":2
   },
   "orderId":"19418",
   "orderDate":"2013-06-17T06:20:47-0700",
   "orderAmount":365.99,
   "createdAt":"2013-11-05T14:23:26-0800",
   "updatedAt":"2013-11-05T14:23:26-0800",
   "investigationId":1,
   "score":262,
   "caseId":1,
   "guaranteeDisposition":"APPROVED"
}
```
#### <a name="claim"/>Claims</a>
<b>NOTE</b>: `"payouts"` is not included in the response for `Claim Review` webhooks.
```
{
   "caseId":1,
   "orderId":"19418",
   "createdAt":"2016-02-21T06:45:05.343Z",
   "updatedAt":"2016-02-21T06:45:05.343Z",
   "amount":365.99,
   "currency":"USD",
   "status":"CLOSED",
   "disposition":"APPROVED",
   "dispositionReason":"elgible chargeback",
   "payouts":[
    {
      "id":123,
      "createdAt":"2016-08-18T06:17:10.225Z",
      "payoutDate":"2016-08-18",
      "method":"PayPal",
      "currency":"USD",
      "amount":101.95,
      "transactionId":"1232"
    }
  ]
}
```

## Create and Update Webhooks [/teams/webhooks]

### Create Webhooks [POST]
Create a new webhook or webhooks for a team. 

+ Request (application/json)

  + Headers

            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6

    + Attribute (array[WebhookRequest])

    + Body

            {
                "webhooks":
                    [
                        {
                            "event": "CASE_REVIEW",
                            "url": "http://knickknacks.examplepartner.com/signifydWebhook.php"
                        },
                        {
                            "event": "CASE_CREATION",
                            "url": "http://knickknacks.examplepartner.com/signifydWebhook.php"
                        }
                    ]
            }

+ Response 200 (application/json)

    + Attribute (array[Webhook])

    + Body

            [
                {
                    "id": 4661,
                    "url": "http://knickknacks.examplepartner.com/signifydWebhook.php",
                    "eventType": "CASE_REVIEW",
                    "team": {
                        "teamName": "Consolidated Knick-Knacks/Amalgamated Tchotchke, Inc.",
                        "teamId": 1234
                    },
                    "eventDisplayText": "Case Review"
                },
                {
                    "id": 4659,
                    "url": "http://knickknacks.examplepartner.com/signifydWebhook.php",
                    "eventType": "CASE_CREATION",
                    "team": {
                        "teamName": "Consolidated Knick-Knacks/Amalgamated Tchotchke, Inc.",
                        "teamId": 1234
                    },
                    "eventDisplayText": "Case Creation"
                }
            ]

+ Response 400 (application/json)
This error response follows our standard error message format, but it also includes an echo of the original request in the `requestBody` field.

    + Body

            {
                "requestBody": {
                    "teamId": null,
                    "webhooks": [
                        {
                            "event": "CASE_REVIEW",
                            "url": "http://knickknacks.examplepartner.com/signifydWebhook.php",
                        },
                        {
                            "eventType": "CASE_CREATION",
                            "url": "http://knickknacks.examplepartner.com/signifydWebhook.php",
                        }
                    ]
                },
                "errors": {
                    "webhooks[1].url": [
                        "A webhook already exists for that event type"
                    ],
                    "webhooks[0].url": [
                        "A webhook already exists for that event type"
                    ]
                },
                "messages": []
            }

### Update Webhooks [PUT]
Update existing webhooks for a team in bulk.
+ Request (application/json)

  + Headers

            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6

    + Attribute (array[WebhookRequest])

    + Body

            {
                "webhooks":
                [
    
                    {
                        "event": "CASE_REVIEW",
                        "url": "http://knickknacks.examplepartner.com/altReview.php"
                    },
                    {
                        "event": "GUARANTEE_COMPLETION",
                        "url": "http://knickknacks.examplepartner.com/altGuaranteeCompletion.php"
                    }
                ]
            }

+ Response 200 (application/json)

    + Attribute (array[Webhook])

    + Body

            [
                {
                    "id": 5011,
                    "url": "http://knickknacks.examplepartner.com/altReview.php"
                    "eventType": "CASE_REVIEW",
                    "team": {
                        "teamName": "Consolidated Knick-Knacks/Amalgamated Tchotchke, Inc.",
                        "teamId": 1234
                    },
                    "eventDisplayText": "Case Review"
                },
                {
                    "id": 5012,
                    "url": "http://knickknacks.examplepartner.com/altGuaranteeCompletion.php"
                    "eventType": "GUARANTEE_COMPLETION",
                    "team": {
                        "teamName": "Consolidated Knick-Knacks/Amalgamated Tchotchke, Inc.",
                        "teamId": 1234
                    },
                    "eventDisplayText": "Guarantee Completion"
                }
            ]


### Retrieve Webhooks [GET]
Retrieve all webhooks for a team.
+ Request

    + Headers

            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6
+ Response 200 (application/json)

    + Attribute (array[Webhook])

    + Body

            [
                {
                    "id": 4661,
                    "url": "http://knickknacks.examplepartner.com/signifydWebhook.php",
                    "eventType": "CASE_REVIEW",
                    "team": {
                        "teamName": "Consolidated Knick-Knacks/Amalgamated Tchotchke, Inc.",
                        "teamId": 1234
                    },
                    "eventDisplayText": "Case Review"
                },
                {
                    "id": 4659,
                    "url": "http://knickknacks.examplepartner.com/signifydWebhook.php",
                    "eventType": "CASE_CREATION",
                    "team": {
                        "teamName": "Consolidated Knick-Knacks/Amalgamated Tchotchke, Inc.",
                        "teamId": 1234
                    },
                    "eventDisplayText": "Case Creation"
                },
                {
                    "id": 4658,
                    "url": "http://knickknacks.examplepartner.com/signifydWebhook.php",
                    "eventType": "GUARANTEE_COMPLETION",
                    "team": {
                        "teamName": "Consolidated Knick-Knacks/Amalgamated Tchotchke, Inc.",
                        "teamId": 1234
                    },
                    "eventDisplayText": "Guarantee Completion"
                },
                {
                    "id": 4660,
                    "url": "http://knickknacks.examplepartner.com/signifydWebhook.php",
                    "eventType": "CASE_RESCORE",
                    "team": {
                        "teamName": "Consolidated Knick-Knacks/Amalgamated Tchotchke, Inc.",
                        "teamId": 1234
                    },
                    "eventDisplayText": "Case Rescore"
                }
            ]



## Update and Delete a Webhook [/teams/webhooks/{id}]
Modify or delete an existing webhook for a team.

### Update Webhook [PUT] 


+ Parameters
    + id: 4660 (number) - Signifyd generated id for the given webhook. These are available when webhooks are first created or when listing webhooks.

+ Request (application/json)
  + Headers

            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6
            
    + Body

            {
                "url": "http://knickknacks.examplepartner.com/altRescore.php"
            }


+ Response 200 (application/json)

    + Attribute (Webhook)

    + Body

                {
                    "id": 4660,
                    "url" : "http://knickknacks.examplepartner.com/signifydWebhook.php",
                    "team": {
                        "teamId": 1234,
                        "teamName": "Consolidated Knick-Knacks/Amalgamated Tchotchke, Inc."
                    },
                    "eventType": "CASE_RESCORE",
                    "eventDisplayText": "Case Rescore"
                }

### Delete Webhook [DELETE]
+ Parameters
    + id: 4660 (number) - Signifyd generated id for the given webhook. These are available when webhooks are first created or when listing webhooks.

+ Request

    + Headers

            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6
+ Response 204


### Group Device Fingerprint

Signifyd’s device fingerprinting solution uniquely tracks and identifies devices used to transact on your site, increasing your protection from fraud.

### 1. Install the Javascript snippet

Place the following script just before the closing `</head>` tag on all public facing pages. The script loads asynchronously and does not affect page load time.

*We recommend that you load the script on all public user-facing pages. If you are unable to load the script on pages such as payment, login, etc, make sure to have loaded the script at least once before the checkout process is complete.*

```
<script
async
type="text/javascript"
id="sig-api"
data-order-session-id="YOUR-SESSION-ID-HERE"
src="https://cdn-scripts.signifyd.com/api/script-tag.js"></script>
```

### 2. Provide a unique session id

Replace `data-order-session-id` with a unique session id for the current user's browsing session. We strongly recommend you generate a session id by base64 encoding the store url and order id or checkout id to ensure uniqueness for device fingerprinting. 

The session id must formatted as followed:
- Less than 128 characters long
- Upper and lowercase English letters (a-z, A-Z)
- Digits (0-9)
- Underscore (_)
- Hyphen (-)

### 3. Send the session id on case creation

After an order is created on your website you will need to add the value you used for `data-order-session-id` to the body of the API POST request to, `https://api.signifiyd.com/v2/cases` under the `purchase` object:

```
// Create a Case
// POST https://api.signifyd.com/v2/cases
// Body
{
    "purchase": {
        "orderSessionId": "YOUR-SESSION-ID-HERE",
        "browserIpAddress": "192.168.1.1",
        "orderId": "19418",
        "createdAt": "2016-07-11T17:54:31-05:00",
        "paymentGateway": "stripe",
        "paymentMethod": "credit_card",
        "transactionId": "1a2sf3f44f21s1",
        "currency": "USD",
       …
    }
}
```

View the [create a case](http://docs.signifydapi.apiary.io/#reference/cases/create-a-case/create-a-case) docs for additional information on creating cases.

### Testing the Signifyd device fingerprinting script
During testing you may want to confirm that the Signifyd device fingerprinting script is working correctly. To do so you can call the `SIGNIFYD_GLOBAL.scriptTagHasLoaded()` method which will return a boolean `true|false` value.

Note - *we have namespaced all of the device fingerprinting methods under the `SIGNIFYD_GLOBAL` object to avoid potential naming conflicts.*



# Data Structures

## Case (object)
+ guaranteeEligible: false(boolean, required) - boolean value indicating if a guarantee can be requested for this Case.  If a guarantee has already been requested for this case, then this value will be 'false'.
+ guaranteeDisposition (GuaranteeDisposition, optional) - If a case has been submitted for guarantee, this field will be present and indicate the decision state of the guarantee.
+ status (CaseStatus, required) - The current status of the case. All cases are set to OPEN by default and only set DISMISSED if a user clicks the "Dismissed" button in the Signifyd console.
+ caseId: 44 (number, required) - The unique identifier assigned to the case when it is created.
+ score: 776 (number, required) - A value from 0-1000 indicating the likelihood that the order/transaction is fraud. 0 indicates the highest risk, 1000 inidicates the lowest risk.
+ investigationId: 44 (number, optional) - DEPRECATED.  See caseId.
+ uuid: `97c56c86-7984-44fa-9a3e-7d5f34d1bead` (string, required) - A universally unique id assigned to the case.
+ headline: Maxine Trycia (string, required) - The headline (aka name) assigned to the case.
+ orderId: 19418 (string, required) - The unique identifier for the order that was provided when the case was created.
+ orderDate: `2013-01-18T22:54:29+0000` (string, optional) - The date and time when the order was placed.
+ orderAmount: 48 (number, required) - The total price of the order, including shipping price and taxes.
+ associatedTeam: 1 (number, required) - The id for the team with which this case is associated.
+ reviewDisposition (ReviewDisposition, required) - The review disposition signifies the agent's opinion after reviewing the case, the value will be FRAUDULENT or GOOD based on the agent's review. If there is no review by the agent the value will be UNSET or NULL.
+ createdAt: `2013-03-06T23:17:17+0000` (string, required) - The date and time when the case was created.
+ updatedAt: `2013-03-06T23:17:18+0000` (string, required) - The date and time when the case was last updated.

## GuaranteeRequest (object)
+ disposition (string) - Guarantee decision result
+ reviewedBy (string) - Analyst who made the decision.
+ reviewedAt (string) - Time of decision. See the Dates section for date formats.
+ submittedBy (string) - User who requested the guarantee.
+ submittedAt (string) - Time when guarantee is requested. See the Dates section for date formats.
+ rereviewCount (number) - Count if there was any re-review
+ caseId (number) - The unique identifier assigned to the case when it is created.
+ guaranteeId (number) - The unique identifier assigned for this guarantee.

## GuaranteeDisposition (enum)
+ APPROVED
+ DECLINED
+ PENDING
+ CANCELED
+ IN_REVIEW

## CaseStatus (enum)
+ OPEN
+ DISMISSED

## ReviewDisposition (enum)
+ GOOD
+ FRAUDULENT
+ UNSET 

## CaseCreation (object)

+ purchase (Purchase) - Data related to purchase event represented in this Case Creation request.
+ recipient (Recipient) - Data related to person or organization receiving the items purchased.
+ card (Card) - Data related to the card that was used for the purchase and its cardholder.
+ userAccount (UserAccount) - If you allow customers to create an account before placing an orders these data values are details from that account. You should only fill these values in if the customer has an account into which they can login. Leave them blank if this was a one-time transaction with no account (Guest Checkout).
+ seller (Seller) - All data related to the seller of the product. This information is optional unless you are operating a marketplace, listing goods on behalf of multiple sellers who each hold a seller account registered with your site (e.g. Ebay).


## Purchase (object)

+ browserIpAddress (string, required) - The IP Address of the browser that was used to make the purchase. This is the IP Address that was used to connect to your site and make the purchase. You must provide a valid IP address syntax. 
+ orderSessionId (string, required) - The unique ID for the user's browsing session. This is to be used in conjunction with the Signifyd Fingerprinting Javascript.
+ discountCodes (array[DiscountCodes], required) - Any discount codes, coupons, or promotional codes used during checkout to recieve a discount on the order. You can only provide the discount code and the discount amount OR the discount percentage. 
+ shipments (array[Shipment], required) - The shipments associated with this purchase.
+ products (array[Product], required) - The products purchased in the transaction.
+ orderId (string, required) - A string uniquely identifying this order.
+ createdAt (string, required) - `yyyy-MM-dd'T'HH:mm:ssZ` The date and time when the order was placed, shown on the signifyd console. See the Dates section of these docs for more information about date formats.
+ paymentGateway (string) - The gateway or financial institution that processed the transaction.
+ paymentMethod (PaymentMethod) - The method the user used to complete the purchase.
+ transactionId (string) - The unique identifier provided by the payment gateway for this order. If you have provided us with credentials for your payment gateway we can obtain additional details about the order, like AVS and CVV status, from your payment provider.
+ currency (string, required) - The currency type of the order, in 3 letter ISO 4217 format. Defaults to USD.
+ avsResponseCode (avsCodes, required) - The response code from the address verification system (AVS). View our [avs and cvv mapping guide](https://www.signifyd.com/resources/manual/avs-and-cvv-mapping-guide/) for mapping suggestions for popular payment gateways. 
+ cvvResponseCode (cvvCodes, required) - The response code from the card verification value (CVV) check. View our [avs and cvv mapping guide](https://www.signifyd.com/resources/manual/avs-and-cvv-mapping-guide/) for mapping suggestions for popular payment gateways.
+ orderChannel (OrderChannel, required) - The method used by the buyer to place the order.
+ receivedBy (string) - If the order was was taken by a customer service or sales agent, his or her name.
+ totalPrice (number, required) - The total price of the order, including shipping price and taxes.
+ customerOrderRecommendation (customerOrderRecommendation) - If the order has already been reviewed for fraud this should indicate the outcome of that review. 

## customerOrderRecommendation (enum)
+ DECLINE_POLICY - The order was declined for business reasons.
+ DECLINE_FRAUD - The order was declined due to fraud related reasons. 
+ APPROVE - The order was approved by the merchant.
+ REVIEW - The order was reviewed by the merchant. 

## OrderChannel (enum)
+ WEB - Orders placed online through a digital storefront.
+ PHONE - Orders placed via telephone.
+ MOBILE_APP - Orders placed through a native mobile application installed on the device (iOS / Android).
+ SOCIAL - Orders placed directly through a social network platform (Facebook, Twitter etc).
+ MARKETPLACE - Orders placed on a 3rd party ecommerce site where products are sold by multiple sellers (Amazon, Wish, Walmart, EBay, etc).
+ IN_STORE_KIOSK - Orders purchased at a physical store on a store owned device and shipped to the buyer's home.

## cvvCodes (enum)
+ M - The CVV provided matches the information on file with the cardholder's bank
+ N - The CVV provided does not match the information on file with the cardholder's bank
+ P - The request did not contain all the information needed to verify the CVV2 code
+ S - The CVV was provided but the card-issuing bank does not participate in card verification
+ U - The card-issuing bank received the CVV, but did not verify whether it was correct. This typically happens if the bank declines an authorization before evaluating the CVV.

## avsCodes (enum)
+ X - Full match: Street address and 9-digit ZIP code both match
+ Y - Full match: Street address and 5-digit ZIP code both match
+ A - Partial match: Street address matches, but both 5-digit and 9-digit ZIP Code do not match
+ W - Partial match: Street address does not match, but 9-digit ZIP code matches
+ Z - Partial match: Street address does not match, but 5-digit ZIP code matches
+ N - No Match: AVS is not available or if the AVS in a U.S. bank is not functioning properly
+ U - Unavailable: AVS is not available or if the AVS in a U.S. bank is not functioning properly
+ R - Unavailable: Issuer’s System Unavailable or Timed Out
+ E - Invalid: AVS data is invalid
+ S - Not suppoted: U.S. issuing bank does not support AVS
+ D - International AVS Code: Full match - Street Address and Postal Code match for International Transaction
+ M - International AVS Code: Full match - Street Address and Postal Code match for International Transaction
+ B - International AVS Code: Partial match - Street Address Match for International Transaction. Postal Code not verified due to incompatible formats
+ P - International AVS Code: Partial match - Postal Codes match for International Transaction but street address not verified due to incompatible formats
+ C - International AVS Code: No match - Street Address and Postal Code not verified for International Transaction due to incompatible formats
+ I - International AVS Code: No match - Address Information not verified by International issuer
+ G - International AVS Code: Not Supported - Non International AVS Code:US. Issuer does not participate

## PaymentMethod (enum)
+ ACH
+ ALI_PAY
+ APPLE_PAY
+ AMAZON_PAYMENTS
+ ANDROID_PAY
+ BITCOIN
+ CASH
+ CHECK
+ CREDIT_CARD
+ FREE
+ GOOGLE_PAY
+ LOAN
+ PAYPAL_ACCOUNT
+ REWARD_POINTS
+ STORE_CREDIT
+ SAMSUNG_PAY
+ VISA_CHECKOUT

## Recipient (object)
+ fullName (string, required) - The full name of the person receiving the goods. If this item is being shipped, then this field is the person it is being shipping to. Don't assume this name is the same as card.cardHolderName. Only put a value here if the name will actually appear on the shipping label. If this item is digital, then this field will likely be blank.
+ confirmationEmail (string, required) - When this purchase was completed, you likely sent a confirmation email or you will be sending a confirmation email to someone once you approve the order. This is the email address to which that confirmation email will be sent. You must provide a valid email syntax.
+ confirmationPhone (string, required) - The phone number that you would call if there was something wrong with this order or the phone number that was supplied with the shipping information.
+ organization (string) - If provided by the buyer, the name of the recipient's company or organization.
+ deliveryAddress (DeliveryAddress, required) - The address to which the order will be delivered.

## DiscountCodes (object)
+ amount (number, required) - The fixed amount of the discount applied. e.g. $10 off purchase. This field should be NULL if a discount percentage is provided.
+ percentage (number, required) - If a percentage discount is applied the percentage of the total order amount the discount applies to. e.g. 20% off purchase. This field should be NULL if amount is provided.
+ code (string, required) - The name of the discount code entered during checkout.

## Shipment (object)
+ shippingPrice (number, required) - The amount charged to the customer for shipping the product
+ shipper (shipper) - The name of the shipper 
+ shippingMethod (shippingMethod, required) - The type of the shipment method used

## shipper (enum)
+ FEDEX
+ DHL
+ SHIPWIRE
+ USPS
+ UPS

## shippingMethod (enum)
+ EXPRESS
+ ELECTRONIC
+ FIRST_CLASS
+ FIRST_CLASS_INTERNATIONAL
+ FREE
+ FREIGHT
+ GROUND
+ INTERNATIONAL
+ OVERNIGHT
+ PRIORITY
+ PRIORITY_INTERNATIONAL
+ PICKUP
+ STANDARD
+ STORE_TO_STORE
+ TWO_DAY

## Card (object)
+ cardHolderName (string, required) - The full name on the credit card that was charged.
+ bin (number, required) - The first six digits of the credit card, the bank identification number, which uniquely identifies the issuer.
+ last4 (string, required) - The last four digits of the card number.
+ expiryMonth (number) - MM representation of the expiration month of the card.
+ expiryYear (number) - yyyy representation of the expiration year of the card.
+ billingAddress (Address, required) - The billing address for the card.

## UserAccount (object)
+ email (string, required) - The primary email address associated with the account.
+ username (string) - The username associated with the account. Please supply this even if it is the same as the email address.
+ phone (string, required) - The phone number associated with the account.
+ createdDate (string, required) - `yyyy-MM-dd'T'HH:mm:ssZ` The date when the account was created. See the Dates section of these docs for more information about date formats.
+ accountNumber (string) - Your unique identifier for the account.
+ lastOrderId (string) - The unique identifier for the last order placed by this account, prior to the current order.
+ aggregateOrderCount (number, required) - The total count of orders placed by this account since it was created, including the current order.
+ aggregateOrderDollars (number, required) - The total amount spent by this account since it was created, including the current order.
+ lastUpdateDate (string) - `yyyy-MM-dd'T'HH:mm:ssZ` The last time a change was made to this account other than an order being placed. Examples include changing email addresses or adding a new credit card. See the Dates section of these docs for more information about date formats.

## Seller (object)
+ name (string) - The business name of the seller.
+ email (string) - The primary email address associated with the seller.
+ username (string) - The unique username associated with the seller. This will likely be whatever they use to login to your site. Please supply this even if it is the same as the email address.
+ accountNumber (string) Your unique, internal identifier for the seller if different from username.
+ phone (string) - The phone number associated with the seller.
+ domain (string) - The domain of the seller.
+ createdDate (string) - `yyyy-MM-dd'T'HH:mm:ssZ` The date when the seller account was created on your site.
+ aggregateOrderCount (number) - The total count of orders sold by this seller since it was created, including the current order.
+ aggregateOrderDollars (number) - The total amount sold by this seller since it was created, including the current order.
+ lastUpdateDate (string) -  `yyyy-MM-dd'T'HH:mm:ssZ` The last time a change was made to this seller (e.g. changed email).
+ onboardingIpAddress (string) - The IP address of the device used when this seller account was created.
+ onboardingEmail (string) - The email address associated with this seller account when it was created.
+ tags (array[string]) - A list of attributes or short descriptors associated with the seller account, formatted as a string of comma-separated values. Example: tag1, tag2, tag3.
+ shipFromAddress (SellerAddress) - The location from which the seller shipped the order.
+ corporateAddress (SellerAddress) - The corporate address of the seller.

## Address (object)
+ streetAddress (string, required) - The street number and street name.
+ unit (string, required) - The unit or apartment number.
+ city (string, required) - The city name.
+ provinceCode (string, required) - The code or abbreviation for the province.
+ postalCode (string, required) - The postal code.
+ countryCode (string, required) - The two-letter ISO-3166 country code. If left blank, we will assume US.

## SellerAddress (object)
+ streetAddress (string) - The street number and street name.
+ unit (string) - The unit or apartment number.
+ city (string) - The city name.
+ provinceCode (string) - The code or abbreviation for the province.
+ postalCode (string) - The postal code.
+ countryCode (string) - The two-letter ISO-3166 country code. If left blank, we will assume US.

## DeliveryAddress (object)
+ Include Address

## Product (object)
+ itemId (string) - Your unique identifier for the product. 
+ itemName (string, required) - The name of the product.
+ itemIsDigital (boolean, required) - Indicates whether the item is electronically delivered e.g. gift cards
+ itemCategory (string) - The name of the top-level product category. e.g. Apparel
+ itemSubCategory (string) - The name of the sub-category of the product if applicable. e.g. T-Shirt 
+ itemUrl (string) - The url to the product's page.
+ itemImage (string) - The url to an image of the product.
+ itemQuantity (number, required) - The number of the items purchased.
+ itemPrice (number, required) - The price paid for each item (not the aggregate).
+ itemWeight (number) - The weight of each item in grams.

## FulfillmentStatus (enum)
# Members
+ PARTIAL - Some of the items on the order have not been shipped. 
+ COMPLETE - All of the items on the order have been shipped. 
+ REPLACEMENT - A replacement for one of the items on the order has been shipped. 

## ShipmentStatus (enum)
# Members
+ WAITING FOR PICKUP - The carrier has received the request and is about to pick up the shipment.
+ IN TRANSIT - The carrier has accepted or picked up shipment.
+ OUT FOR DELIVERY - The carrier is about to deliver the shipment, or it is ready to pickup.
+ FAILED ATTEMPT - The carrier attempted to deliver but failed. 
+ DELIVERED - The shipment was delivered successfully.
+ EXCEPTION - An issue occured while attempting to deliver the shipment (customs hold, undelivered, and returned shipment).

## Fulfillment (object)
+ id (number, required) - The id that uniquely identifies the shipment.
+ orderId (string, required) - The id that uniquely identifies the order the shipment is for. This should be the same order id provided when the case was created in Signifyd.
+ createdAt (string, required) - yyyy-MM-dd'T'HH:mm:ssZ The date and time when the items were fulfilled.
+ fulfillmentStatus (FulfillmentStatus, optional) - The status of whether all of the products on the order have been shipped. If all of the products on the order have been shipped the status should be COMPLETE, if additional products need to still be shipped the status should be PARTIAL. 
+ shipmentStatus (ShipmentStatus, optional) - The delivery status of the shipment as provided by the shipping company.
+ shippingCarrier (string, optional) - The name of the shipping company that delivered is delivering the product(s).
+ trackingNumbers (array, optional) - The tracking number(s) for the shipment as provided by the shipping carrier.
+ trackingUrls (array) - The tracking URLs for the shipment as provided by the shipping carrier.
+ recipientName (string, optional) - The full name of the person receiving the shipment.
+ deliveryAddress (Address, optional) - The physical location where the item has been or is being shipped to.
+ products (array[Product], optional) - The list of products that were including in the shipment. 
+ deliveryEmail (string, optional) - If any of the items fulfilled were digital, the email address of the user that downloaded or has access to the digital product.
+ confirmationName (string, optional) - If the item was picked up at a physical location, the name of the store or business the item was picked up from.
+ confirmationPhone (string, optional) - If the item was picked up at a physical location, the phone number of the store or business the item was picked up from.

## Fulfillments (object)
+ fulfillments (array[Fulfillment]) - A list of fulfillments associated with an order.

## InvestigationStatus (enum)
+ OPEN
+ DISMISSED

## WebhookEventType (enum)
+ CASE_CREATION
+ CASE_RESCORE
+ CASE_REVIEW
+ GUARANTEE_COMPLETION
+ CLAIM_REVIEWED

## WebhookRequest (object)
+ event (WebhookEventType) - the type/topic of the event
+ url: `http://knickknacks.examplepartner.com/signifydWebhook.php` (string) - the URL to which the webhook data should be sent when the event is triggered

## Webhook (object)
+ id: 1234 (number) - unique Signifyd generated integer identifying this webhook
+ eventType (WebhookEventType) - the type/topic of the event
+ eventDisplayText: `Guarantee Completion` (string) - A more human friendly version of the event type.
+ url: `http://knickknacks.examplepartner.com/signifydWebhook.php` (string) - the URL to which the webhook data should be sent when the event is triggered
+ team
    + teamId: 1234 (number) - id of the team owning this webhook
    + teamName: "Consolidated Knick-Knacks, Inc." (string) - name of the team owning this webhook

## WebhookPayload (object)
+ analysisUrl: `https://signifyd.com/v2/cases/1/analysis` (string)
+ entriesUrl: `https://signifyd.com/v2/cases/1/entries` (string)
+ notesUrl: `https://signifyd.com/v2/cases/1/notes` (string)
+ orderUrl: `https://signifyd.com/v2/cases/1/order` (string)
+ guaranteeEligible (boolean)
+ status: "DISMISSED" (InvestigationStatus)
+ uuid: `709b9107-eda0-4cdd-bdac-a82f51a8a3f3` (string)
+ headline: `John Smith` (string)
+ reviewDisposition (string)
+ associatedTeam
+     teamName: `MyTeamName` (string)
+     teamId: 26 (number)
+     getAutoDismiss (boolean)
+     getTeamDismissalDays (number)
+ orderId: 19418 (number)
+ orderDate: `2013-06-17T06:20:47-0700` (string)
+ orderAmount: 365.99 (number)
+ createdAt: `2013-11-05T14:23:26-0800` (string)
+ updatedAt: `2013-11-05T14:23:26-0800` (string)
nce + investigationId: 1 (number)
+ score: 262 (number)
+ caseId: 1 (number)
+ guaranteeDisposition: "APPROVED" (GuaranteeDisposition)